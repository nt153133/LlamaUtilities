<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="String1" type="System.Resources.ResXNullRef, System.Windows.Forms">
    <value />
  </data>
  <data name="UtilitiesBase_Name" xml:space="preserve">
    <value>Llama终极工具箱</value>
  </data>
  <data name="FCWorkshop_Name" xml:space="preserve">
    <value>部队工坊</value>
  </data>
  <data name="FCWorkshop_TryingToOpenWindow" xml:space="preserve">
    <value>尝试打开 部队工坊窗口.</value>
  </data>
  <data name="FCWorkshop_FailedToOpenWindow" xml:space="preserve">
    <value>无法打开部队工坊窗口.</value>
  </data>
  <data name="Retainers_NoSummoningBell" xml:space="preserve">
    <value>附近没有召唤钟</value>
  </data>
  <data name="DeliveriesSettings_NitowikweDescription" xml:space="preserve">
    <value>Nitowikwe 是位于 Shaaloani 的老主顾交货 NPC.</value>
  </data>
  <data name="DeliveriesSettings_MargratDescription" xml:space="preserve">
    <value>马格拉特是位于迷宫中的老主顾送货 NPC.</value>
  </data>
  <data name="HuntsSettings_ARRHuntsDescription" xml:space="preserve">
    <value>完成 ARR 每日狩猎</value>
  </data>
  <data name="HuntsSettings_ClanHuntsDescription" xml:space="preserve">
    <value>完成氏族印记每日狩猎</value>
  </data>
  <data name="HuntsSettings_VeteranClanHuntsDescription" xml:space="preserve">
    <value>完成老部族印记日常狩猎</value>
  </data>
  <data name="RaceSettings_RaceChoiceDescription" xml:space="preserve">
    <value>您想跑哪条赛道?</value>
  </data>
  <data name="RaceSettings_LoopDescription" xml:space="preserve">
    <value>持续运行比赛，直到机器人停止.</value>
  </data>
  <data name="RaceSettings_UseAbility1Description" xml:space="preserve">
    <value>我们是否应该使用热栏插槽中的功能 1?</value>
  </data>
  <data name="RaceSettings_UseAbility2Description" xml:space="preserve">
    <value>我们是否应该使用热栏插槽中的功能 2?</value>
  </data>
  <data name="RaceSettings_GoLeftDescription" xml:space="preserve">
    <value>冲刺时持续向左按压.</value>
  </data>
  <data name="RaceSettings_CureStaminaDescription" xml:space="preserve">
    <value>我们应该在什么体力下使用巧克力治愈剂?</value>
  </data>
  <data name="ReduceSettings_IncludeArmoryDescription" xml:space="preserve">
    <value>包括用于分解装备</value>
  </data>
  <data name="ReduceSettings_IncludeArmoryJsonProperty" xml:space="preserve">
    <value>包括装备</value>
  </data>
  <data name="ReduceSettings_IncludeArmoryCategory" xml:space="preserve">
    <value>分解</value>
  </data>
  <data name="ReduceSettings_IncludeFishDescription" xml:space="preserve">
    <value>分解所有能分解的鱼</value>
  </data>
  <data name="ReduceSettings_IncludeFishJsonProperty" xml:space="preserve">
    <value>包括鱼</value>
  </data>
  <data name="ReduceSettings_IncludeFishCategory" xml:space="preserve">
    <value>分解</value>
  </data>
  <data name="ReduceSettings_StayRunningDescription" xml:space="preserve">
    <value>保持持续运行</value>
  </data>
  <data name="ReduceSettings_StayRunningJsonProperty" xml:space="preserve">
    <value>保留运行</value>
  </data>
  <data name="ReduceSettings_StayRunningCategory" xml:space="preserve">
    <value>额外</value>
  </data>
  <data name="ReduceSettings_OpenCoffersDescription" xml:space="preserve">
    <value>打开箱子</value>
  </data>
  <data name="ReduceSettings_OpenCoffersJsonProperty" xml:space="preserve">
    <value>打开箱子</value>
  </data>
  <data name="RetainerSettings_DepositFromPlayerDescription" xml:space="preserve">
    <value>如果拥有相同物品，则将物品给同一个雇员?</value>
  </data>
  <data name="RetainerSettings_DepositFromSaddleBagsDescription" xml:space="preserve">
    <value>将相同物品从包中取出</value>
  </data>
  <data name="RetainerSettings_DebugLoggingDescription" xml:space="preserve">
    <value>打印详细调试信息</value>
  </data>
  <data name="RetainerSettings_GetGilDescription" xml:space="preserve">
    <value>从每笔存款中提取金币Gil</value>
  </data>
  <data name="RetainerSettings_ReassignVenturesDescription" xml:space="preserve">
    <value>重新分配雇员的冒险</value>
  </data>
  <data name="RetainerSettings_DontOrganizeRetainersDescription" xml:space="preserve">
    <value>不尝试在包之间合并重复的物品堆</value>
  </data>
  <data name="RetainerSettings_LoopDescription" xml:space="preserve">
    <value>循环收雇员</value>
  </data>
  <data name="Utilities_FormTitle" xml:space="preserve">
    <value>LLB终极工具箱</value>
  </data>
  <data name="Utilities_TabRetainers" xml:space="preserve">
    <value>收雇员</value>
  </data>
  <data name="Utilities_TabDailyHunts" xml:space="preserve">
    <value>每日狩猎板</value>
  </data>
  <data name="Utilities_BtnStart" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="Utilities_TabMateria" xml:space="preserve">
    <value>魔晶石镶嵌</value>
  </data>
  <data name="Utilities_TabRemove" xml:space="preserve">
    <value>移除魔晶石</value>
  </data>
  <data name="Utilities_InventoryFilter" xml:space="preserve">
    <value>库存过滤器</value>
  </data>
  <data name="Utilities_RemoveMateria" xml:space="preserve">
    <value>移除所有魔晶石</value>
  </data>
  <data name="Utilities_BtnRemoveAllMateria" xml:space="preserve">
    <value>移除所有魔晶石</value>
  </data>
  <data name="Utilities_BtnRefresh" xml:space="preserve">
    <value>刷新</value>
  </data>
  <data name="Utilities_TabAffix" xml:space="preserve">
    <value>嵌入魔晶石</value>
  </data>
  <data name="Utilities_TabInventory" xml:space="preserve">
    <value>库存</value>
  </data>
  <data name="Utilities_LblDesynth" xml:space="preserve">
    <value>&lt;-分解所有亲信本装备，可能还有鱼</value>
  </data>
  <data name="Utilities_BtnDesynth" xml:space="preserve">
    <value>分解</value>
  </data>
  <data name="Utilities_BtnOpenAllCoffers" xml:space="preserve">
    <value>打开所有箱子</value>
  </data>
  <data name="Utilities_BtnExtractMateria" xml:space="preserve">
    <value>精致魔晶石</value>
  </data>
  <data name="Utilities_BtnReduceAll" xml:space="preserve">
    <value>去除所有</value>
  </data>
  <data name="Utilities_TabCustomDeliveries" xml:space="preserve">
    <value>老主顾</value>
  </data>
  <data name="Utilities_TabGcTurnin" xml:space="preserve">
    <value>军队交军票</value>
  </data>
  <data name="Utilities_TabHousing" xml:space="preserve">
    <value>房子扫描</value>
  </data>
  <data name="Utilities_TabFCWorkshop" xml:space="preserve">
    <value>部队工坊</value>
  </data>
  <data name="Utilities_TabChocoRacer" xml:space="preserve">
    <value>赛鸟</value>
  </data>
  <data name="Utilities_LblChocoRacerInfo" xml:space="preserve">
    <value>腾龙提醒：该机器人仅支持巧克力治愈 II、治愈 III、冲刺 II 和超级冲刺。</value>
  </data>
  <data name="Utilities_BtnGoToBreeder" xml:space="preserve">
    <value>GoTo 饲养员</value>
  </data>
  <data name="Utilities_BtnGoToRaceCounter" xml:space="preserve">
    <value>GoTo 比赛计数器</value>
  </data>
</root>